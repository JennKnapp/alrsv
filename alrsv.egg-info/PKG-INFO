Metadata-Version: 2.1
Name: alrsv
Version: 0.1.2
Summary: Identify frequencies of mutations from aligned reads
Home-page: https://github.com/JennKnapp/alrsv
Author: Jenn Knapp
Author-email: jenn.knapp@uwaterloo.ca
Description-Content-Type: text/markdown

# Alrsv

Abundance learning for RSV lineages. The primary purpose of the tool is:

* Estimating abundace of lineages from wastewater sequencing data

You can read more about how Alrsv works in the preprint for the original tool Alcov that was designed for SARS-CoV-2 variant abundance, __[Alcov: Estimating Variant of Concern Abundance from SARS-CoV-2 Wastewater Sequencing Data](https://www.medrxiv.org/content/10.1101/2021.06.03.21258306v1)__

The tool can also be used for:

* Determining the frequency of mutations of interest in BAM files

The tool is under active development. If you have questions or issues, please open an issue on GitHub or email me (email in setup.py).

## Installing

The latest release can be downloaded from PyPI

`pip install alrsv`

This will install the Python library and the CLI.

To install the development version, clone the repository and run

`pip install .`

## Usage example

### Preprocessing

Alrsv expects a BAM file of reads aligned to the RSV reference genome (rsv_a_genome_root.fasta). For an example of how to process Illumina reads, check the `prep` directory.

### Estimating relative abundance of variants of concern:

```
alrsv find_lineages reads.bam
```

Finding lineages in BAM files for multiple samples:

```
alrsv find_lineages samples.txt
```

Where `samples.txt` looks like:

```
reads1.bam	Sample 1 name
reads2.bam	Sample 2 name
...
```

Optionally specify which lineagess to look for

```
alrsv find_lineages reads.bam lineages.txt
```

Where `lineages.txt` looks like:

```
A
A.D
A.D.5
A.D.5.3
...
```

Optionally change minimum read depth (default 40)

```
alrsv find_lineages --min_depth=5 reads.bam
```

(Not yet for RSV) Optionally show how predicted mutation rates agree with observed mutation rates

```
alrsv find_lineages --show_stacked=True reads.bam
```

Use mutations which are found in multiple lineages (can help for low coverage samples)

```
alrsv find_lineages --unique=False reads.bam
```

Plotting change in lineage distributions over time for multiple sites

```
alrsv find_lineages --ts samples.txt
```

Where `samples.txt` looks like:

```
reads1.bam	SITE1_2021-09-10
reads2.bam	SITE1_2021-09-12
...
reads3.bam	SITE2_2021-09-10
reads4.bam	SITE2_2021-09-12
...
```

### Converting mutation names:
(Not yet for RSV, this info is for SARS-CoV-2 only)
```
$ alcov nt A23063T
A23063T causes S:N501Y
$ alcov aa S:E484K
G23012A causes S:E484K
```

### Finding mutations in BAM file:

```
alrsv find_mutants reads.bam
```

Finding mutations in BAM files for multiple samples:

```
alrsv find_mutants samples.txt
```

Where `samples.txt` looks like:

```
reads1.bam	Sample 1 name
reads2.bam	Sample 2 name
...
```

Running `find_mutants` will print the number of reads with and without each mutation in each sample and then generate a heatmap showing the frequencies for all samples.

You can also specify a custom mutations file:

```
alrsv find_mutants samples.txt mutations.txt
```

Where `mutations.txt` looks like:

```
T5559C
C4536T
C14630T
A13698G
C13619T
...
```

### Getting the read depth for each amplicon
(Not yet for RSV, amplicon definitions are currently for SARS-CoV-2)

```
alrsv amplicon_coverage reads.bam
```

or

```
alrsv amplicon_coverage samples.txt
```

### Plotting amplicon GC content against amplicon depth
(Not yet for RSV, amplicon definitions are currently for SARS-CoV-2)

```
alrsv gc_depth reads.bam
```

or

```
alrsv gc_depth samples.txt
```
